{
  "permissions": {
    "allow": [
      "Bash(.venv/bin/pip install:*)",
      "Bash(.venv/bin/pytest tests/ -v --cov=src/nanobricks --cov-report=term-missing)",
      "Bash(.venv/bin/pytest tests/test_config.py -xvs)",
      "Bash(.venv/bin/pytest tests/test_config.py -xvs -k \"test_init\")",
      "Bash(.venv/bin/pytest tests/test_production.py tests/test_security.py -v)",
      "Bash(.venv/bin/pytest tests/unit/test_ai_* -v --tb=short)",
      "Bash(.venv/bin/python:*)",
      "Bash(./build-for-distribution.sh:*)",
      "Bash(./fix-project-taskfile.sh:*)",
      "Bash(/Users/jankothyson/Code/kaosmaps/nano/nano-1/.venv/bin/python verify-installation.py)",
      "Bash(awk:*)",
      "Bash(cat:*)",
      "Bash(chmod:*)",
      "Bash(cp:*)",
      "Bash(do echo \"=== Testing $f ===\")",
      "Bash(done)",
      "Bash(echo:*)",
      "Bash(eza:*)",
      "Bash(find:*)",
      "Bash(for:*)",
      "Bash(git add:*)",
      "Bash(git checkout:*)",
      "Bash(git worktree:*)",
      "Bash(grep:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(mypy:*)",
      "Bash(open:*)",
      "Bash(pip install:*)",
      "Bash(PYTHONPATH=src pytest tests/unit/test_protocol.py -v)",
      "Bash(python -m pytest tests/unit/test_protocol.py -v)",
      "Bash(python:*)",
      "Bash(pytest:*)",
      "Bash(quarto:*)",
      "Bash(rg:*)",
      "Bash(rm:*)",
      "Bash(ruff check:*)",
      "Bash(ruff format:*)",
      "Bash(sed:*)",
      "Bash(source:*)",
      "Bash(task --list)",
      "Bash(task agentic:generate:contexts)",
      "Bash(task agentic:version:check:*)",
      "Bash(task core:dev:format)",
      "Bash(task core:dev:lint)",
      "Bash(task core:dev:test)",
      "Bash(task dev:format)",
      "Bash(task dev:link:project PATH=/Users/jankothyson/Code/kaosmaps/nano/nano-scorm)",
      "Bash(task dev:link:project PATH=~/Code/kaosmaps/nano/nano-scorm)",
      "Bash(task dev:lint)",
      "Bash(task dev:list:linked)",
      "Bash(task dev:test)",
      "Bash(task dist:build)",
      "Bash(task dist:clean)",
      "Bash(task dist:new:project:*)",
      "Bash(task docs:preview)",
      "Bash(task docs:render)",
      "Bash(task docs:site:render)",
      "Bash(task version:bump:patch)",
      "Bash(task version:current)",
      "Bash(task version:release)",
      "Bash(timeout:*)",
      "Bash(touch:*)",
      "Bash(uv add:*)",
      "Bash(uv init:*)",
      "Bash(uv pip install:*)",
      "Bash(uv run:*)",
      "Bash(uv sync:*)",
      "WebFetch(domain:agentcommunicationprotocol.dev)",
      "WebFetch(domain:docs.ag-ui.com)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:modelcontextprotocol.io)",
      "Bash(eza:*)",
      "Bash(task atomic:hook:install)",
      "Bash(task atomic:analyze:changes)",
      "Bash(task atomic:validate COUNT=5)",
      "Bash(git rm:*)",
      "Bash(git reset:*)",
      "Bash(git cherry-pick:*)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": false
}